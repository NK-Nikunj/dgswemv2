#include "utilities/almost_equal.hpp"
#include "basis/bases_2D.hpp"

const std::vector<Point<2>> points = {{1.0000000000000000e+00, -1.0000000000000000e+00},
                                      {5.0000000000000000e-01, -1.0000000000000000e+00},
                                      {5.0000000000000000e-01, -5.0000000000000000e-01},
                                      {0.0000000000000000e+00, -1.0000000000000000e+00},
                                      {0.0000000000000000e+00, -5.0000000000000000e-01},
                                      {0.0000000000000000e+00, 0.0000000000000000e+00},
                                      {-5.0000000000000000e-01, -1.0000000000000000e+00},
                                      {-5.0000000000000000e-01, -5.0000000000000000e-01},
                                      {-5.0000000000000000e-01, 0.0000000000000000e+00},
                                      {-5.0000000000000000e-01, 5.0000000000000000e-01},
                                      {-1.0000000000000000e+00, -1.0000000000000000e+00},
                                      {-1.0000000000000000e+00, -5.0000000000000000e-01},
                                      {-1.0000000000000000e+00, 0.0000000000000000e+00},
                                      {-1.0000000000000000e+00, 5.0000000000000000e-01},
                                      {-1.0000000000000000e+00, 1.0000000000000000e+00}};

const std::vector<std::vector<double>> true_vals= {
{1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1},
{1.015250e-01,-2.730564e-02,-7.557123e-02,1.038939e-01,-2.794771e-02,-7.739654e-02,1.064368e-01,-2.863729e-02,-7.936084e-02,1.091760e-01,-2.938058e-02,-8.148269e-02,1.121382e-01,-3.018490e-02,-8.378437e-02,1.153554e-01,-3.105910e-02,-8.629278e-02,1.188663e-01,-3.201392e-02,-8.904085e-02,1.227186e-01,-3.306257e-02,-9.206934e-02,1.269714e-01,-3.422147e-02,-9.542944e-02,1.316993e-01,-3.551142e-02,-9.918641e-02,1.369980e-01,-3.695912e-02,-1.034251e-01,1.429922e-01,-3.859956e-02,-1.082580e-01,1.498488e-01,-4.047969e-02,-1.138384e-01,1.577966e-01,-4.266414e-02,-1.203811e-01,1.671594e-01,-4.524494e-02,-1.281987e-01,1.784139e-01,-4.835838e-02,-1.377672e-01,1.922962e-01,-5.221684e-02,-1.498551e-01,2.100185e-01,-5.717364e-02,-1.658043e-01,2.337530e-01,-6.387138e-02,-1.882286e-01,2.678986e-01,-7.363892e-02,-2.231445e-01,3.232422e-01,-8.984375e-02,-2.890625e-01,4.375000e-01,-1.250000e-01,-5.000000e-01,1},
{1.030732e-02,-7.455982e-04,5.711011e-03,-1.079395e-02,7.810743e-04,-5.990225e-03,1.132879e-02,-8.200946e-04,6.298142e-03,-1.191940e-02,8.632182e-04,-6.639429e-03,1.257498e-02,-9.111280e-04,7.019820e-03,-1.330686e-02,9.646676e-04,-7.446444e-03,1.412919e-02,-1.024891e-03,7.928273e-03,-1.505985e-02,1.093133e-03,-8.476764e-03,1.612173e-02,-1.171109e-03,9.106777e-03,-1.734471e-02,1.261061e-03,-9.837943e-03,1.876844e-02,-1.365976e-03,1.069675e-02,-2.044676e-02,1.489926e-03,-1.171980e-02,2.245467e-02,-1.638605e-03,1.295918e-02,-2.489977e-02,1.820229e-03,-1.449161e-02,2.794228e-02,-2.047104e-03,1.643491e-02,-3.183150e-02,2.338533e-03,-1.897980e-02,3.697784e-02,-2.726598e-03,2.245656e-02,-4.410777e-02,3.268825e-03,-2.749105e-02,5.464045e-02,-4.079554e-03,3.543001e-02,-7.176964e-02,5.422690e-03,-4.979348e-02,1.044855e-01,-8.071899e-03,8.355713e-02,-1.914062e-01,1.562500e-02,-2.500000e-01,1},
{-9.784150e-02,0,9.934675e-02,0,-1.009237e-01,0,1.025782e-01,0,-1.043168e-01,0,1.061469e-01,0,-1.080768e-01,0,1.101160e-01,0,-1.122752e-01,0,1.145665e-01,0,-1.170041e-01,0,1.196042e-01,0,-1.223857e-01,0,1.253707e-01,0,-1.285853e-01,0,1.320606e-01,0,-1.358338e-01,0,1.399499e-01,0,-1.444644e-01,0,1.494460e-01,0,-1.549810e-01,0,1.611803e-01,0,-1.681881e-01,0,1.761971e-01,0,-1.854706e-01,0,1.963806e-01,0,-2.094727e-01,0,2.255859e-01,0,-2.460938e-01,0,2.734375e-01,0,-3.125000e-01,0,3.750000e-01,0,-5.000000e-01,0,1},
{-9.933358e-03,0,-7.507756e-03,0,2.820586e-03,0,1.091809e-02,0,8.278667e-03,0,-3.118657e-03,0,-1.211954e-02,0,-9.226002e-03,0,3.487166e-03,0,1.361809e-02,0,1.041814e-02,0,-3.954421e-03,0,-1.553948e-02,0,-1.196405e-02,0,4.566248e-03,0,1.809203e-02,0,1.404862e-02,0,-5.402006e-03,0,-2.164783e-02,0,-1.701269e-02,0,6.612132e-03,0,2.694280e-02,0,2.156150e-02,0,-8.520604e-03,0,-3.566529e-02,0,-2.942864e-02,0,1.197631e-02,0,5.273138e-02,0,4.632188e-02,0,-2.013564e-02,0,-1.010132e-01,0,-1.083984e-01,0,6.250000e-02,0,1},
{9.572959e-03,0,9.869777e-03,0,1.018559e-02,0,1.052228e-02,0,1.088199e-02,0,1.126717e-02,0,1.168061e-02,0,1.212554e-02,0,1.260571e-02,0,1.312548e-02,0,1.368996e-02,0,1.430516e-02,0,1.497825e-02,0,1.571781e-02,0,1.653418e-02,0,1.744000e-02,0,1.845081e-02,0,1.958598e-02,0,2.086998e-02,0,2.233410e-02,0,2.401912e-02,0,2.597908e-02,0,2.828724e-02,0,3.104540e-02,0,3.439934e-02,0,3.856535e-02,0,4.387879e-02,0,5.088902e-02,0,6.056213e-02,0,7.476807e-02,0,9.765625e-02,0,1.406250e-01,0,2.500000e-01,0,1},
{1.015250e-01,2.730564e-02,-7.557123e-02,-1.038939e-01,-2.794771e-02,7.739654e-02,1.064368e-01,2.863729e-02,-7.936084e-02,-1.091760e-01,-2.938058e-02,8.148269e-02,1.121382e-01,3.018490e-02,-8.378437e-02,-1.153554e-01,-3.105910e-02,8.629278e-02,1.188663e-01,3.201392e-02,-8.904085e-02,-1.227186e-01,-3.306257e-02,9.206934e-02,1.269714e-01,3.422147e-02,-9.542944e-02,-1.316993e-01,-3.551142e-02,9.918641e-02,1.369980e-01,3.695912e-02,-1.034251e-01,-1.429922e-01,-3.859956e-02,1.082580e-01,1.498488e-01,4.047969e-02,-1.138384e-01,-1.577966e-01,-4.266414e-02,1.203811e-01,1.671594e-01,4.524494e-02,-1.281987e-01,-1.784139e-01,-4.835838e-02,1.377672e-01,1.922962e-01,5.221684e-02,-1.498551e-01,-2.100185e-01,-5.717364e-02,1.658043e-01,2.337530e-01,6.387138e-02,-1.882286e-01,-2.678986e-01,-7.363892e-02,2.231445e-01,3.232422e-01,8.984375e-02,-2.890625e-01,-4.375000e-01,-1.250000e-01,5.000000e-01,1},
{1.030732e-02,7.455982e-04,5.711011e-03,1.079395e-02,7.810743e-04,5.990225e-03,1.132879e-02,8.200946e-04,6.298142e-03,1.191940e-02,8.632182e-04,6.639429e-03,1.257498e-02,9.111280e-04,7.019820e-03,1.330686e-02,9.646676e-04,7.446444e-03,1.412919e-02,1.024891e-03,7.928273e-03,1.505985e-02,1.093133e-03,8.476764e-03,1.612173e-02,1.171109e-03,9.106777e-03,1.734471e-02,1.261061e-03,9.837943e-03,1.876844e-02,1.365976e-03,1.069675e-02,2.044676e-02,1.489926e-03,1.171980e-02,2.245467e-02,1.638605e-03,1.295918e-02,2.489977e-02,1.820229e-03,1.449161e-02,2.794228e-02,2.047104e-03,1.643491e-02,3.183150e-02,2.338533e-03,1.897980e-02,3.697784e-02,2.726598e-03,2.245656e-02,4.410777e-02,3.268825e-03,2.749105e-02,5.464045e-02,4.079554e-03,3.543001e-02,7.176964e-02,5.422690e-03,4.979348e-02,1.044855e-01,8.071899e-03,8.355713e-02,1.914062e-01,1.562500e-02,2.500000e-01,1},
{-9.933358e-03,0,-7.507756e-03,0,2.820586e-03,0,1.091809e-02,0,8.278667e-03,0,-3.118657e-03,0,-1.211954e-02,0,-9.226002e-03,0,3.487166e-03,0,1.361809e-02,0,1.041814e-02,0,-3.954421e-03,0,-1.553948e-02,0,-1.196405e-02,0,4.566248e-03,0,1.809203e-02,0,1.404862e-02,0,-5.402006e-03,0,-2.164783e-02,0,-1.701269e-02,0,6.612132e-03,0,2.694280e-02,0,2.156150e-02,0,-8.520604e-03,0,-3.566529e-02,0,-2.942864e-02,0,1.197631e-02,0,5.273138e-02,0,4.632188e-02,0,-2.013564e-02,0,-1.010132e-01,0,-1.083984e-01,0,6.250000e-02,0,1},
{1.030732e-02,-7.455982e-04,5.711011e-03,-1.079395e-02,7.810743e-04,-5.990225e-03,1.132879e-02,-8.200946e-04,6.298142e-03,-1.191940e-02,8.632182e-04,-6.639429e-03,1.257498e-02,-9.111280e-04,7.019820e-03,-1.330686e-02,9.646676e-04,-7.446444e-03,1.412919e-02,-1.024891e-03,7.928273e-03,-1.505985e-02,1.093133e-03,-8.476764e-03,1.612173e-02,-1.171109e-03,9.106777e-03,-1.734471e-02,1.261061e-03,-9.837943e-03,1.876844e-02,-1.365976e-03,1.069675e-02,-2.044676e-02,1.489926e-03,-1.171980e-02,2.245467e-02,-1.638605e-03,1.295918e-02,-2.489977e-02,1.820229e-03,-1.449161e-02,2.794228e-02,-2.047104e-03,1.643491e-02,-3.183150e-02,2.338533e-03,-1.897980e-02,3.697784e-02,-2.726598e-03,2.245656e-02,-4.410777e-02,3.268825e-03,-2.749105e-02,5.464045e-02,-4.079554e-03,3.543001e-02,-7.176964e-02,5.422690e-03,-4.979348e-02,1.044855e-01,-8.071899e-03,8.355713e-02,-1.914062e-01,1.562500e-02,-2.500000e-01,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1.015250e-01,2.730564e-02,-7.557123e-02,-1.038939e-01,-2.794771e-02,7.739654e-02,1.064368e-01,2.863729e-02,-7.936084e-02,-1.091760e-01,-2.938058e-02,8.148269e-02,1.121382e-01,3.018490e-02,-8.378437e-02,-1.153554e-01,-3.105910e-02,8.629278e-02,1.188663e-01,3.201392e-02,-8.904085e-02,-1.227186e-01,-3.306257e-02,9.206934e-02,1.269714e-01,3.422147e-02,-9.542944e-02,-1.316993e-01,-3.551142e-02,9.918641e-02,1.369980e-01,3.695912e-02,-1.034251e-01,-1.429922e-01,-3.859956e-02,1.082580e-01,1.498488e-01,4.047969e-02,-1.138384e-01,-1.577966e-01,-4.266414e-02,1.203811e-01,1.671594e-01,4.524494e-02,-1.281987e-01,-1.784139e-01,-4.835838e-02,1.377672e-01,1.922962e-01,5.221684e-02,-1.498551e-01,-2.100185e-01,-5.717364e-02,1.658043e-01,2.337530e-01,6.387138e-02,-1.882286e-01,-2.678986e-01,-7.363892e-02,2.231445e-01,3.232422e-01,8.984375e-02,-2.890625e-01,-4.375000e-01,-1.250000e-01,5.000000e-01,1},
{-9.784150e-02,0,9.934675e-02,0,-1.009237e-01,0,1.025782e-01,0,-1.043168e-01,0,1.061469e-01,0,-1.080768e-01,0,1.101160e-01,0,-1.122752e-01,0,1.145665e-01,0,-1.170041e-01,0,1.196042e-01,0,-1.223857e-01,0,1.253707e-01,0,-1.285853e-01,0,1.320606e-01,0,-1.358338e-01,0,1.399499e-01,0,-1.444644e-01,0,1.494460e-01,0,-1.549810e-01,0,1.611803e-01,0,-1.681881e-01,0,1.761971e-01,0,-1.854706e-01,0,1.963806e-01,0,-2.094727e-01,0,2.255859e-01,0,-2.460938e-01,0,2.734375e-01,0,-3.125000e-01,0,3.750000e-01,0,-5.000000e-01,0,1},
{1.015250e-01,-2.730564e-02,-7.557123e-02,1.038939e-01,-2.794771e-02,-7.739654e-02,1.064368e-01,-2.863729e-02,-7.936084e-02,1.091760e-01,-2.938058e-02,-8.148269e-02,1.121382e-01,-3.018490e-02,-8.378437e-02,1.153554e-01,-3.105910e-02,-8.629278e-02,1.188663e-01,-3.201392e-02,-8.904085e-02,1.227186e-01,-3.306257e-02,-9.206934e-02,1.269714e-01,-3.422147e-02,-9.542944e-02,1.316993e-01,-3.551142e-02,-9.918641e-02,1.369980e-01,-3.695912e-02,-1.034251e-01,1.429922e-01,-3.859956e-02,-1.082580e-01,1.498488e-01,-4.047969e-02,-1.138384e-01,1.577966e-01,-4.266414e-02,-1.203811e-01,1.671594e-01,-4.524494e-02,-1.281987e-01,1.784139e-01,-4.835838e-02,-1.377672e-01,1.922962e-01,-5.221684e-02,-1.498551e-01,2.100185e-01,-5.717364e-02,-1.658043e-01,2.337530e-01,-6.387138e-02,-1.882286e-01,2.678986e-01,-7.363892e-02,-2.231445e-01,3.232422e-01,-8.984375e-02,-2.890625e-01,4.375000e-01,-1.250000e-01,-5.000000e-01,1},
{1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1},
};

const std::vector<std::vector<double>> true_Dvals;


int main() {
    
    using Utilities::almost_equal;


    Basis::Legendre_2D basis;
    bool error_found = false;


    Array2D<double> my_evals = basis.GetPhi(10, points);
    Array3D<double> my_Devals = basis.GetDPhi(10, points);
    
   for (uint dof = 0; dof < 66; ++dof) {
        // Check the evaluations of the Legendre polynomials
    
        for (uint pt = 0; pt < 15; ++pt) {
            if (!almost_equal(true_vals[dof][pt], my_evals[dof][pt])) {
                std::cerr << "Error dof(" << dof << "): the true value = " << true_vals[dof][pt]
                          << " your computed value  = " << my_evals[dof][pt] << std::endl;

                error_found = true;
            }
        }
        
/*
        for (int pt = 0; pt < 15; ++pt) {
            if (!almost_equal(true_Dvals[dof][2 * pt], my_Devals[dof][LocalCoordTri::z1][pt], 1000) ||
                !almost_equal(true_Dvals[dof][2 * pt + 1], my_Devals[dof][LocalCoordTri::z2][pt], 1000)) {

                std::cerr << "Error in Gradient dof(" << dof << pt << "): the true value = (" << std::setprecision(14)
                << true_Dvals[dof][2 * pt] << ", " << true_Dvals[dof][2 * pt + 1]
                << ") your computed value  = (" << my_Devals[dof][LocalCoordTri::z1][pt] << ", "
                << my_Devals[dof][LocalCoordTri::z2][pt] << ")\n";

                error_found = true;
            }
            
        }*/
        
    }
    
    
    if (error_found) {
        return 1;
    }
    return 0;
    
}

